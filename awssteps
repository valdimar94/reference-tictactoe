After setting up AWS ECS and AWS command line interface and making sure
both python and pip are installed on the system:
Log in to AWS, here you must have AWS credentials awailable on the AWS account
The credentials are downloaded to the machine and need to be stored.
To log in, enter:
aws configure
Here enter credentials.

For the next step, an EC2 instance needs to be launched from the
AWS console. The top option is picked and go through the progress by
picking the default options except when asked for security options.
SSH is chosen by default but a new one needs to be added, with a
http protocol. Finish the instance creator and launch the instance.
Entering the instances window, here all instances can be seen. Notice
the Public IP address in the description, save that.

Now a connection needs to be established to the instance running
on the AWS server.
In the terminal, locate the key pair downloaded before.
run:
chmod 400 enter-the-ec2-key-name-here
ssh -i my-ec2-key-pair.pem ec2-user@<EC2-INSTANCE-PUBLIC-IP-ADDRESS>

substituting the names and ip address for the correct ones.
Now, Amazon Linux AMI should be up and running on this machine.

run:
sudo yum update -y
sudo yum install -y docker
sudo service docker start

This gets Docker up and running on the server.

run:
sudo usermod -a -G docker ec2-user
exit

> ssh -i my-ec2-key-pair.pem ec2-user@<EC2-INSTANCE-PUBLIC-IP-ADDRESS>

This means that sudo is not needed for most commands.

Now docker-compose needs to be installed on the server to be able to
run the image, so run:
sudo curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

Going back to the local machine, the ports in the Dockerfile and
docker-compose need to be changed from 3000 to 80.
After that the pack.sh script needs to be run to create a new image for
the docker-compose on the server.

This puts the docker-compose.yaml file to the server so an image can be run:
scp -o StrictHostKeyChecking=no -i "../admin-key-pair-ireland.pem" ./docker-compose.yaml ec2-user@54.171.205.207:~/docker-compose.yaml

Back to the server, now running docker-compose up should start the server and
going to the IP address http://54.171.152.220/ should display the app.

** NOTE **
If there is trouble running docker-compose up with it trying to connect
to port 80 and failing, there is a possibility of an older image
is running where the ports have not been changed to 80.
Running the
./rmContainers.sh
and
./rmImages.sh
on the server removes the old containers and images and if ./pack.sh
has been run on the local machine everything should work fine.
